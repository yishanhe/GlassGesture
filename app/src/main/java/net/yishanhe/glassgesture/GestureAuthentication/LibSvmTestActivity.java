package net.yishanhe.glassgesture.GestureAuthentication;

import android.app.Activity;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.widget.TextView;

import com.dtw.TimeWarpInfo;
import com.timeseries.TimeSeries;

import net.yishanhe.glassgesture.R;

import java.util.Arrays;


public class LibSvmTestActivity extends Activity {


    private static final String TAG = "Libsvm";
    private TextView status;
    public static final String EOL = System.getProperty("line.separator");

    // svm native
    private native int trainClassifierNative(String trainingFile, int kernelType,
                                             int cost, float gamma, int isProb, String modelFile);
    private native int doClassificationNative(float values[][], int indices[][],
                                              int isProb, String modelFile, int labels[], double probs[]);

    static {
        try {
            System.loadLibrary("svmjni");
        } catch (UnsatisfiedLinkError e) {
            Log.e(TAG, "can not load native library libsvmjni");
        }
    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.test_layout);

        status = (TextView) findViewById(R.id.status);
        status.setText("Running LibSVM test.");


        callSVM();

    }

//    private class LibSvmAsyncTask extends AsyncTask<String, String, String> {
//
//        @Override
//        protected String doInBackground(String... params) {
//
//            callSVM();
//
//            return null;
//        }
//
//        @Override
//        protected void onProgressUpdate(String... values) {
//            super.onProgressUpdate(values);
//            status.append(values[0]);
//        }
//    }


    public void callSVM() {

        // test input

        float[][] values_shake = {{ 0.1899f, 0.1535f, 0.3835f, -0.2027f, 0.0408f, 0.0057f, -0.0952f, -0.1420f, 0.1186f, 0.0560f, 0.1668f, 0.1358f, 0.0560f, 0.0519f, -0.0500f, 0.1396f, 0.0838f, 0.0299f, 0.0668f, 0.1393f, 0.0845f, 0.1150f, 0.0128f, 0.1286f, 0.0918f, 0.0116f, 0.1435f, 0.0531f, -0.0383f, -0.1017f, -0.0030f, -0.0829f, 0.0909f, 0.0139f, -0.0238f, -0.0001f, -0.0295f, -0.1005f, -0.0141f, -0.0811f, 0.0968f, 0.0347f, 0.1572f, 0.1348f, 0.0624f, 0.0012f, 0.0025f, 0.0522f, -0.0364f, 0.1503f, -0.0208f, -0.0149f, -0.0493f, 0.1131f, 0.0857f, -0.0314f, -0.0258f, -0.0212f, 0.0133f, -0.0514f, 0.1042f, 0.0860f, 0.0317f, 0.0777f, 0.1035f, -0.0778f, -0.0497f, 0.0150f, -0.0034f, -0.0700f, 0.0412f, -0.0765f, -0.0753f, -0.0750f, 0.0400f, -0.0765f, -0.0758f, 0.0953f, 0.1020f, 0.1051f, 0.0912f, 0.0441f, 0.0262f, 0.0855f, 0.2451f, -0.0713f, 0.0187f, -0.0819f, -0.0763f, -0.0792f, -0.0409f, -0.0727f, -0.0601f, 0.0650f, 0.0744f, 0.0397f, 0.2427f, -0.0781f, -0.0355f, -0.0756f, -0.0647f, -0.0664f, 0.0131f, -0.0681f, -0.0642f, -0.0576f, 0.0204f, 0.0014f, -0.0103f, -0.0669f, -0.0436f, -0.0635f, 0.0252f, -0.0474f, -0.0624f, -0.0424f, -0.0314f, -0.0816f, -0.0720f, 0.0030f, -0.0721f, -0.0680f},
                { 0.0406f, 0.0498f, 0.0052f, 0.0144f, -0.0422f, -0.1183f, 0.0183f, 0.0714f, -0.0202f, -0.0397f, 0.0252f, -0.0499f, -0.0410f, -0.0382f, 0.0191f, -0.0241f, -0.0015f, 0.0468f, -0.0053f, -0.0109f, 0.3017f, 0.1008f, 0.5568f, 0.0410f, -0.0371f, -0.0575f, -0.0266f, -0.0634f, -0.0589f, -0.0746f, -0.0697f, -0.0732f, 0.2034f, -0.1755f, 0.4027f, -0.1062f, -0.0622f, -0.0689f, -0.0625f, -0.0716f, -0.0324f, -0.0461f, 0.0020f, -0.0498f, -0.0249f, -0.0326f, 0.0930f, -0.0322f, -0.0089f, -0.0349f, -0.0191f, -0.0316f, 0.0137f, 0.0093f, -0.0365f, -0.0075f, 0.0408f, -0.0729f, -0.0484f, -0.0680f, -0.0400f, 0.0627f, 0.0297f, 0.0666f, 0.0385f, -0.0696f, 0.0582f, -0.0037f, 0.0327f, -0.0667f, -0.0666f, -0.0690f, -0.0464f, -0.0692f, -0.0676f, -0.0690f, -0.0467f, -0.0116f, 0.0635f, 0.0134f, -0.0095f, 0.0562f, 0.1504f, 0.0798f, 0.0906f, -0.0683f, -0.0707f, -0.0695f, -0.0501f, -0.0576f, -0.0655f, -0.0506f, -0.0369f, 0.0735f, 0.1014f, 0.0464f, 0.1136f, -0.0715f, -0.0650f, -0.0565f, -0.0377f, -0.0589f, -0.0487f, -0.0587f, -0.0467f, -0.0503f, 0.0060f, 0.0013f, -0.0054f, -0.0538f, -0.0678f, -0.0540f, 0.0210f, -0.0651f, -0.0496f, -0.0561f, -0.0075f, -0.0560f, -0.0635f, -0.0491f, -0.0628f, -0.0514f},
                { 0.0846f, 0.0810f, 0.0394f, 0.0430f, -0.1023f, 0.1091f, 0.0034f, -0.0334f, -0.0886f, -0.0945f, -0.0926f, -0.1180f, -0.0978f, -0.0894f, -0.0163f, -0.1124f, -0.0281f, 0.0439f, -0.0312f, 0.0320f, 0.0096f, -0.0020f, 0.0600f, 0.0661f, -0.0952f, -0.1016f, -0.1060f, -0.1298f, -0.0832f, -0.0531f, -0.0993f, -0.1064f, -0.0841f, -0.1391f, -0.1416f, -0.2375f, -0.0948f, -0.0782f, -0.1074f, -0.0893f, -0.0687f, -0.0859f, -0.0672f, -0.0899f, -0.0461f, -0.0331f, -0.0275f, -0.0438f, -0.0767f, -0.0949f, -0.1026f, -0.0451f, -0.0116f, -0.0871f, -0.0944f, -0.0801f, -0.0540f, -0.0193f, -0.0773f, 0.0235f, -0.0832f, 0.1010f, 0.0605f, 0.1040f, 0.0661f, -0.1093f, -0.0518f, -0.0050f, 0.0184f, -0.1222f, -0.1328f, -0.1152f, -0.0984f, -0.1177f, -0.1286f, -0.1154f, -0.0991f, 0.1781f, -0.0050f, 0.0425f, 0.0449f, 0.0792f, -0.0542f, 0.0471f, -0.0179f, -0.1188f, -0.1275f, -0.1051f, -0.0957f, -0.0749f, -0.1140f, -0.0676f, -0.0835f, 0.0801f, 0.1081f, 0.1864f, -0.0376f, -0.0972f, -0.1062f, -0.0710f, -0.0857f, -0.0936f, -0.0787f, -0.0891f, -0.0794f, -0.0787f, 0.0067f, 0.0028f, -0.0271f, -0.0881f, -0.1278f, -0.0836f, -0.1477f, -0.1021f, -0.0784f, -0.0894f, -0.0801f, 0.2117f, -0.0940f, -0.0754f, -0.0923f, -0.0820f},
                { -0.0370f, -0.0256f, 0.0156f, -0.0798f, -0.0369f, -0.0749f, 0.0893f, 0.0285f, -0.0660f, -0.0465f, -0.0579f, -0.0211f, -0.0418f, -0.0519f, 0.0765f, -0.0538f, -0.0699f, -0.1051f, -0.0900f, -0.0995f, -0.0845f, -0.1027f, -0.0710f, -0.1161f, -0.0603f, -0.0136f, -0.0444f, 0.0250f, 0.0268f, 0.1436f, 0.0423f, 0.1647f, -0.0979f, 0.0247f, -0.0088f, -0.0392f, -0.0159f, 0.1210f, 0.0336f, 0.1153f, -0.0531f, -0.0527f, -0.0480f, -0.0349f, -0.0363f, -0.0191f, -0.0201f, -0.0303f, 0.1266f, -0.0684f, 0.1218f, -0.0139f, -0.0147f, -0.0336f, -0.0289f, 0.1219f, 0.2205f, -0.0017f, -0.0514f, 0.0299f, -0.0515f, -0.1344f, 0.0114f, -0.1477f, -0.1027f, 0.1293f, -0.0256f, 0.0968f, -0.0983f, 0.0670f, -0.0315f, 0.1053f, 0.0700f, 0.1026f, -0.0320f, 0.1060f, 0.0706f, -0.0463f, -0.0325f, -0.0769f, -0.0720f, -0.0953f, -0.0509f, -0.1210f, -0.0986f, 0.0781f, -0.0255f, 0.1357f, 0.0912f, 0.2098f, -0.0097f, 0.2484f, 0.1949f, -0.1729f, 0.0332f, -0.0166f, 0.0006f, 0.1133f, -0.0133f, 0.2520f, 0.2004f, 0.0487f, -0.0361f, 0.0971f, 0.0475f, -0.0590f, 0.0062f, -0.0407f, 0.0200f, 0.1768f, 0.0388f, 0.1462f, 0.0586f, 0.0846f, 0.1282f, 0.0522f, 0.1219f, 0.0365f, 0.1132f, -0.0344f, 0.1179f, 0.0623f},
                { 0.1058f, 0.1378f, 0.0085f, 0.0265f, -0.0827f, 0.1888f, 0.0577f, -0.0158f, -0.1015f, -0.1028f, -0.1174f, -0.1147f, -0.0834f, -0.0773f, 0.0365f, -0.1313f, 0.0406f, 0.1157f, 0.0126f, -0.0027f, -0.0115f, 0.0030f, -0.0716f, 0.0194f, -0.1057f, -0.1194f, -0.1261f, -0.1319f, -0.1262f, -0.1385f, -0.1124f, -0.1297f, -0.0302f, 0.0173f, -0.1249f, -0.0241f, -0.1039f, -0.1396f, -0.1226f, -0.1097f, -0.0741f, -0.0919f, -0.0757f, -0.0916f, -0.0487f, -0.0299f, -0.0282f, -0.0434f, 0.0491f, -0.0819f, 0.0297f, 0.0103f, 0.2203f, -0.0991f, -0.0837f, 0.0506f, 0.0022f, 0.1384f, -0.0608f, 0.2266f, -0.0886f, 0.1073f, 0.0351f, 0.1033f, 0.1094f, -0.1172f, 0.0005f, -0.0258f, -0.0702f, -0.1209f, -0.0853f, -0.1169f, -0.1380f, -0.1208f, -0.0871f, -0.1168f, -0.1378f, 0.0986f, -0.0339f, 0.0729f, 0.0297f, 0.0113f, -0.0168f, 0.0235f, 0.0177f, -0.1141f, -0.0858f, -0.1120f, -0.1290f, -0.1009f, -0.0820f, -0.0849f, -0.0914f, 0.0414f, 0.0837f, -0.0439f, -0.0224f, -0.0926f, -0.0727f, -0.0890f, -0.0927f, -0.0962f, -0.0679f, -0.0926f, -0.0923f, -0.0823f, 0.0084f, -0.0028f, -0.0286f, -0.0785f, -0.1370f, -0.0842f, -0.0153f, -0.0822f, -0.0826f, -0.0853f, 0.0506f, -0.0209f, -0.0943f, -0.0597f, -0.0921f, -0.0948f},
                { -0.0869f, -0.0686f, -0.0327f, -0.0848f, 0.1090f, 0.0266f, -0.0205f, -0.0956f, 0.1715f, 0.1179f, 0.1940f, 0.1288f, 0.1312f, 0.1163f, 0.0414f, 0.1005f, 0.1025f, 0.0852f, 0.0217f, 0.1228f, 0.1521f, 0.0659f, 0.0664f, 0.1241f, 0.1141f, 0.1015f, 0.1351f, 0.0718f, -0.0318f, 0.0023f, -0.0539f, -0.0389f, 0.1693f, 0.0849f, 0.0861f, 0.0713f, 0.0358f, 0.0116f, -0.0577f, -0.0408f, 0.1925f, 0.1210f, 0.2130f, 0.1320f, 0.2648f, 0.1276f, 0.2881f, 0.1648f, -0.0909f, 0.1827f, -0.0758f, -0.0528f, -0.0499f, 0.0028f, 0.0581f, -0.0894f, -0.1256f, 0.1728f, 0.1604f, 0.1348f, 0.1282f, 0.0069f, -0.0568f, 0.0279f, -0.0357f, -0.0232f, 0.0414f, -0.0209f, 0.0263f, -0.0009f, 0.0598f, -0.0193f, 0.0490f, -0.0129f, 0.0567f, -0.0200f, 0.0477f, 0.0016f, 0.1363f, 0.1262f, 0.0838f, 0.0513f, 0.1209f, 0.0718f, -0.0080f, -0.0100f, 0.0220f, -0.0293f, 0.0285f, -0.0458f, -0.0336f, -0.0383f, -0.0355f, 0.0526f, 0.0353f, -0.1177f, -0.0188f, -0.0211f, -0.0301f, -0.0452f, -0.0325f, -0.0197f, 0.0329f, -0.0341f, 0.0248f, -0.0062f, 0.0126f, -0.0392f, -0.0132f, -0.0489f, 0.0272f, -0.0431f, -0.0429f, -0.0489f, -0.0317f, -0.0244f, -0.0894f, -0.0332f, -0.0134f, 0.0559f, -0.0214f, 0.0623f},
                { -0.0372f, -0.0063f, 0.0027f, -0.1056f, 0.0080f, -0.0391f, 0.0900f, 0.0549f, -0.0415f, 0.0028f, -0.0451f, 0.0207f, -0.0038f, -0.0028f, 0.0787f, -0.0102f, -0.1514f, -0.1041f, -0.1534f, -0.1106f, -0.0835f, -0.0781f, -0.0682f, -0.0941f, -0.0287f, 0.0392f, -0.0297f, 0.0684f, 0.0476f, 0.0670f, 0.0610f, 0.1011f, -0.0773f, -0.0460f, -0.0375f, 0.0027f, 0.0388f, 0.1474f, 0.0325f, 0.1570f, -0.0447f, -0.0165f, -0.0427f, -0.0012f, -0.0352f, -0.0260f, -0.0205f, -0.0128f, 0.0049f, -0.0373f, 0.0036f, -0.0563f, -0.0189f, -0.0199f, -0.0270f, -0.0000f, 0.1370f, -0.0829f, -0.0348f, -0.0880f, -0.0376f, -0.1609f, -0.0090f, -0.1686f, -0.1400f, 0.1464f, -0.0413f, 0.0129f, 0.0268f, 0.1673f, -0.0521f, 0.1613f, 0.1191f, 0.1577f, -0.0517f, 0.1613f, 0.1188f, -0.0924f, -0.0886f, -0.0764f, -0.1317f, -0.0841f, -0.0337f, -0.0799f, -0.0688f, 0.1799f, -0.0506f, 0.1528f, 0.1168f, 0.0877f, -0.0566f, 0.0605f, 0.0529f, -0.0865f, -0.0894f, -0.0321f, 0.0379f, 0.1925f, -0.0578f, 0.0403f, 0.0059f, 0.1970f, -0.0457f, 0.1860f, 0.1114f, 0.1614f, 0.0018f, -0.1639f, 0.1673f, 0.1007f, 0.1285f, 0.1485f, -0.0457f, 0.0291f, 0.1331f, 0.0188f, -0.0000f, 0.0246f, 0.1377f, -0.0484f, 0.1430f, 0.0821f},
                { -0.1012f, -0.1135f, 0.0012f, -0.0754f, 0.0789f, 0.0061f, -0.1920f, -0.1995f, 0.1074f, 0.0921f, 0.1095f, 0.1855f, 0.0799f, 0.0876f, -0.1733f, 0.2062f, 0.1040f, 0.0267f, 0.0901f, 0.2646f, -0.0385f, 0.0231f, 0.0725f, 0.0285f, 0.1153f, 0.0702f, 0.0720f, 0.1328f, -0.1066f, -0.0780f, -0.0835f, -0.0756f, -0.0017f, 0.0948f, -0.1915f, 0.0093f, -0.0196f, -0.0651f, -0.0366f, -0.0554f, 0.0693f, 0.0697f, 0.0708f, 0.1934f, 0.0025f, 0.0609f, -0.1169f, 0.0958f, -0.0685f, 0.0856f, -0.0489f, -0.0183f, -0.0685f, 0.1448f, 0.1170f, -0.0609f, -0.0657f, 0.0172f, 0.0507f, -0.0325f, 0.1953f, 0.0515f, -0.0929f, 0.0614f, 0.0681f, -0.0683f, -0.0732f, -0.0030f, -0.0279f, -0.0576f, 0.0520f, -0.0650f, -0.0618f, -0.0643f, 0.0508f, -0.0653f, -0.0625f, -0.0767f, 0.0506f, 0.1162f, 0.0664f, 0.1014f, 0.0074f, 0.1287f, 0.1483f, -0.0638f, 0.0317f, -0.0733f, -0.0639f, -0.0535f, -0.0278f, -0.0588f, -0.0663f, 0.0923f, 0.1477f, 0.1951f, 0.1719f, -0.0620f, -0.0134f, -0.0634f, -0.0527f, -0.0669f, 0.0172f, -0.0707f, -0.0659f, -0.0558f, 0.0401f, 0.0277f, -0.0037f, -0.0698f, -0.0384f, -0.0704f, -0.0150f, -0.0380f, -0.0714f, -0.0367f, -0.0609f, -0.0312f, -0.0729f, 0.0123f, -0.0733f, -0.0682f},
                { 0.0726f, 0.0346f, 0.0150f, 0.1340f, -0.0821f, 0.0565f, -0.0597f, -0.0697f, -0.0668f, -0.0888f, -0.0540f, -0.0004f, -0.0772f, -0.0872f, -0.0734f, 0.0094f, -0.0924f, -0.1206f, -0.1406f, -0.1051f, -0.0479f, -0.0677f, -0.0657f, -0.1033f, -0.0676f, -0.0822f, -0.0403f, 0.0469f, -0.0425f, -0.0099f, 0.0355f, 0.1858f, -0.0492f, 0.0186f, 0.0056f, -0.0155f, -0.0592f, -0.0203f, 0.0221f, 0.1492f, -0.0496f, -0.0692f, -0.0439f, -0.0173f, -0.0328f, -0.0209f, -0.0179f, -0.0215f, 0.2741f, -0.0731f, 0.2660f, 0.1044f, 0.1981f, 0.1905f, -0.0111f, 0.2809f, 0.1244f, 0.0858f, -0.0609f, 0.1404f, 0.0105f, -0.0520f, -0.0231f, -0.0524f, -0.0422f, 0.0469f, -0.0792f, 0.0290f, -0.0836f, -0.0050f, 0.0802f, 0.0226f, 0.0218f, 0.0241f, 0.0813f, 0.0233f, 0.0226f, -0.0987f, -0.1323f, -0.1032f, -0.1161f, -0.0498f, -0.0948f, -0.0826f, -0.0833f, -0.0001f, 0.1051f, 0.0416f, 0.0459f, 0.0540f, 0.1235f, 0.0953f, 0.0798f, -0.0784f, -0.0012f, 0.0239f, 0.0115f, 0.0092f, 0.1179f, 0.0909f, 0.0946f, -0.0214f, 0.0573f, 0.0017f, 0.0003f, -0.0390f, -0.0042f, 0.0237f, 0.0062f, 0.1590f, 0.0054f, 0.0773f, 0.0529f, 0.1263f, 0.0647f, 0.1369f, 0.2809f, 0.1270f, 0.0371f, 0.0959f, 0.0346f, 0.0317f},
                { -0.0734f, -0.0884f, -0.0279f, -0.0069f, 0.0764f, -0.0100f, -0.0514f, -0.1207f, 0.1441f, 0.1006f, 0.1321f, 0.0692f, 0.0949f, 0.0985f, -0.0177f, 0.0939f, 0.0237f, 0.1293f, 0.0536f, 0.0281f, 0.2563f, 0.1556f, 0.0753f, 0.2151f, 0.0983f, 0.0706f, 0.1498f, 0.0448f, 0.1132f, -0.0429f, 0.1955f, -0.0002f, 0.2153f, 0.2153f, 0.1274f, 0.2382f, 0.0895f, -0.0354f, 0.1455f, -0.0191f, 0.1448f, 0.0961f, 0.1171f, 0.0508f, 0.2110f, 0.2329f, 0.1904f, 0.1802f, -0.0388f, 0.1928f, -0.0164f, -0.0131f, -0.0379f, 0.0694f, 0.0623f, -0.0356f, -0.0470f, 0.0116f, 0.0702f, -0.0273f, 0.0632f, 0.0284f, 0.1190f, 0.0294f, -0.0339f, 0.0037f, -0.0639f, -0.0850f, 0.0264f, 0.0533f, -0.0256f, 0.0274f, 0.0646f, 0.0291f, -0.0246f, 0.0272f, 0.0639f, -0.0616f, 0.1484f, 0.0414f, 0.1165f, 0.0453f, 0.0315f, 0.0700f, 0.0580f, 0.0289f, -0.0211f, -0.0001f, 0.0220f, -0.0421f, -0.0073f, -0.0206f, -0.0362f, 0.0783f, -0.0581f, 0.0650f, -0.0044f, -0.0541f, -0.0096f, -0.0232f, -0.0322f, 0.0333f, -0.0321f, 0.0045f, 0.0422f, 0.1030f, 0.0003f, 0.0650f, 0.0102f, -0.0174f, 0.0854f, -0.0094f, -0.0437f, -0.0363f, 0.0034f, -0.0210f, -0.0356f, -0.0051f, 0.0053f, -0.0324f, 0.0030f, 0.0425f},
        };

        int[][] indices = {{ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122},
                { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122},
                { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122},
                { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122},
                { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122},
                { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122},
                { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122},
                { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122},
                { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122},
                { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122},
        };


        int[] groundTruth = {13,11,9,4,6,2,7,13,3,2};
        int num = groundTruth.length;

        int[] labels = new int[num];
        double[] probs = new double[num];
        int isProb = 0; // Not probability prediction

        String modelFile = "/sdcard/models/shake-multi-class.model";


        long start = System.currentTimeMillis();
        int r = doClassificationNative(values_shake, indices, isProb, modelFile, labels, probs);
        status.append("SVM time (per instance) "+(System.currentTimeMillis()-start)/num+" ms"+EOL);
        if (r!=0){
            Log.d(TAG, "Classification is wrong.");
        }


        status.append("labels: "+ Arrays.toString(labels) + EOL);


    }
}
